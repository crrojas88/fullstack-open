{"version":3,"sources":["components/Notification.js","components/Search.js","components/Form.js","components/Contact.js","components/Contact-list.js","services/contacts.js","App.js","index.js"],"names":["Notification","message","className","Search","placeholder","searchField","handleChange","name","value","onChange","Form","handleSubmit","newName","newNumber","onSubmit","type","Contact","person","handleDelete","number","onClick","ContactList","persons","map","id","baseUrl","contactService","create","newObject","axios","post","then","response","data","getAll","get","update","put","remove","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchField","setMessage","useEffect","initialContacts","e","target","filteredContacts","filter","toLowerCase","includes","toLocaleLowerCase","preventDefault","find","p","window","confirm","updatedPerson","returnedContact","nameObj","concat","setTimeout","addContact","catch","error","console","log","finally","deleteContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d128f487.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n    if(message === null) {\n        return null\n    }\n    return(\n        <div className='success'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react';\n\nconst Search = ({ placeholder, searchField, handleChange }) => {\n    return(\n        <div>\n        Search: <input placeholder={placeholder} name='searchField' value={searchField} onChange={handleChange}/>\n        </div>\n    )\n}\n\nexport default Search","import React from \"react\";\n\nconst Form = ({ handleSubmit, newName, newNumber, handleChange }) => {\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n        <div>\n          Name: <input name='newName' value={newName} onChange={handleChange}/>\n        </div>\n        <div>\n          Number: <input name='newNumber' value={newNumber} onChange={handleChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n        </div>\n    )\n}\n\nexport default Form","import React from \"react\";\n\nconst Contact = ({ person, handleDelete }) => {\n    return(\n        <div>\n            {person.name} - {person.number}\n            <button onClick={handleDelete}>Delete</button>\n        </div>\n    )\n}\n\nexport default Contact","import React from \"react\";\nimport Contact from './Contact';\n\nconst ContactList = ({ persons, handleDelete }) => {\n    return(\n        <div>\n            <ul>\n                {persons.map(person => <li key={person.id}><Contact person={person} handleDelete={() => handleDelete(person.id)} /></li>)}\n            </ul>\n        </div>\n    )\n}\n\nexport default ContactList","import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (newObject, id) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst contactService = { create, getAll, update ,remove }\n\nexport default contactService","import React, { useState, useEffect } from 'react';\nimport Notification from './components/Notification';\nimport Search from './components/Search';\nimport Form from './components/Form';\nimport ContactList from './components/Contact-list';\nimport contactService from './services/contacts';\n\nconst App = () => {\n \n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchField, setSearchField ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  // fetch promise and data from db.json\n  const hook = () => {\n    contactService\n    .getAll()\n    .then(initialContacts => {\n      setPersons(initialContacts)\n    })\n  }\n  useEffect(hook, [])\n\n  // Handles change for different input values.\n  const handleChange = (e) => {\n    const value = e.target.value\n\n    if(e.target.name === 'newName'){\n      setNewName(value)\n    } else if(e.target.name === 'newNumber') {\n      setNewNumber(value)\n    } else {\n      setSearchField(value)\n    }\n  }\n\n  // Adds new contact. \n  const addContact = (e) => {\n    e.preventDefault()\n    \n    const nameObj = {\n      name: newName,\n      number: newNumber\n    }\n\n    contactService\n    .create(nameObj)\n    .then(returnedContact => {\n      setPersons(persons.concat(returnedContact))\n      setMessage(`${newName} has been added!`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n    })\n    setNewName('')\n    setNewNumber('')\n  }\n\n  // handles submit button logic to add new or edit existing contact.\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const exists = persons.find(person => person.name === newName)\n    \n    if(exists) {\n      const person = persons.find(p => p.name === newName)\n      const confirmChange = window.confirm(`${newName} already exists. Replace old number with a new one?`)\n      if(confirmChange) {\n      const id = person.id\n      const updatedPerson = {...person, number: newNumber}\n\n      contactService\n      .update(updatedPerson, id)\n      .then(returnedContact => {\n      setPersons(persons.map(p => p.id !== id ? p: returnedContact))\n      })\n      } else {\n        setPersons(persons)\n      }\n    } else {\n      addContact(e)\n    } \n    setNewName('')\n    setNewNumber('')\n  }\n\n  // Filters through the persons array and renders ContactList accordingly taking account of lowercase inputs.\n  const filteredContacts = persons.filter(person => person.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n  \n  // takes the id and deletes from db then filters persons and returns persons that DON'T match with id\n  const deleteContact = id => {\n    let deleted = true\n    contactService\n    .remove(id)\n    .catch(error => {\n      console.log(error)\n    })\n    .finally(() => {\n      if(deleted) {\n        setPersons(persons.filter(p => p.id !== id))\n      }\n    })\n  }\n\n  // Handles delete button on Contact component by finding the person associated to id \n  // and uses window.confirm to delete contact with deleteContact function.\n  const handleDelete = (id) => {\n    const person = persons.find(person => person.id === id)\n    const confirmDelete = window.confirm(`Delete ${person.name}?`)\n\n    if(confirmDelete) {\n      deleteContact(id)\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n        <Notification message={message}/>\n        <Search placeholder='Search Contacts' searchField={searchField} handleChange={handleChange} />\n      <h2>Add New Contact</h2>\n        <Form handleSubmit={handleSubmit} newName={newName} newNumber={newNumber} handleChange={handleChange}/>\n      <h2>Numbers</h2>\n        <ContactList persons={filteredContacts} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}